import "Documentation/Documentation.style" as theme;

style container {
   // FlexLayoutDirection = Horizontal;
   DistributeExtraSpace = AroundContent;
   PreferredSize = 1pca;
}

style constrain {
//   BackgroundColor = yellow;
//   BackgroundImage = url(image);
    PreferredSize = 600px 300px;    
    FlexLayoutDirection = Vertical;
   // Overflow = Hidden;
}

style flex-demo {
    FlexLayoutDirection = Vertical;
    TextColor = black;
    MarginBottom = 1em;
}

style flex-demo-content { 
    TextColor = white;
    TextFaceDilate = 0.4;
    TextFontStyle = Italic;
    TextFontSize = 14;
    BackgroundColor = Green;
    FlexLayoutDirection = Horizontal;
    DistributeExtraSpaceVertical = CenterContent;
    Padding = 10px;
    PreferredWidth = 100%;
}

style flex-demo-content-child1 {
    PreferredWidth = 190px;
    BackgroundColor = yellow;
    PreferredHeight = 300px;
    [hover] {
        PreferredWidth = 490px;
        FlexItemGrow = 3;
    }
}
style flex-demo-content-child {
    FlexItemGrow = 1;
    BackgroundColor = yellow;
    [hover] {
        FlexItemGrow = 3;
    }
}

style circle-clip {
    BorderRadius = 50%;
//    BorderRadiusTopRight = 20%;
    // Overflow = Hidden;
    FlexItemGrow = 0;
}

style rot {
    TransformRotation = 45;
    TransformPivot = 0.5 0.5;
}

style special-text {
    TextFontSize = 1.5em;
    TextColor = yellow;
}

style heading {
    FlexItemGrow = 1;
}

style horizontal {
    FlexLayoutDirection = Horizontal;
}

style flex-start {
    DistributeExtraSpaceHorizontal = AfterContent;
}

style flex-end {
    DistributeExtraSpaceHorizontal = BeforeContent;
}

style flex-center {
    DistributeExtraSpaceHorizontal = CenterContent;
}

style flex-space-between {
    DistributeExtraSpaceHorizontal = BetweenContent;
}

style flex-space-around {
    DistributeExtraSpaceHorizontal = AroundContent;
}

style flex-grow-1 {
    FlexItemGrow = 1;
}

style flex-grow-2 {
    FlexItemGrow = 2;
}

style flex-item {
    PreferredSize = 1cnt;
    Padding = 1em 0.25em;
    BackgroundColor = red;
    Margin = 0 10px;
    TextAlignment = Center;
    DistributeExtraSpaceVertical = CenterContent;
    TextWhitespaceMode = PreserveNewLines TrimLineStart;
}

style clip-test-item {
    PreferredSize = 300px;
    BackgroundColor = Red;
    MarginLeft = 20px;
    MarginTop = 20px;
    //BackgroundImage = url(images/backgroundimg);
}

style not-clipped {
    //ClipBehavior = Never;
}

style clip-test-more-clip {
    PreferredSize = 100px;
    BackgroundColor = Red;
    BorderRadius = 50%;
    MarginLeft = 30px;   
    //Overflow = Hidden;
}

style clip-nested {
    PreferredSize = 100px;
    MarginTop = 25px;
    MarginLeft = 25px;
    BackgroundColor = cyan;
}

style special-text {
    TextColor = White;
    //TextFontAsset = @theme.fontDigitalDreamFat;
}

//style img1 {
//    PreferredSize = 100px;
//    BackgroundImage = url(icon_1);
//}
//
//style img2 {
//    PreferredSize = 100px;
//    BackgroundImage = url(icon_2);
//}
//
//style img3 {
//    PreferredSize = 100px;
//    BackgroundImage = url(icon_3);
//}
//
//style img4 {
//    PreferredSize = 100px;
//    BackgroundImage = url(icon_4);
//}
//
//style img5 {
//    PreferredSize = 100px;
//    BackgroundImage = url(icon_5);
//}
//
//style img6 {
//    PreferredSize = 100px;
//    BackgroundImage = url(icon_6);
//}
//
//style img7 {
//    PreferredSize = 100px;
//    BackgroundImage = url(icon_7);
//}

style flex-parent {
    PreferredSize = 1cnt 300px;
    FlexLayoutDirection = Horizontal;
    BackgroundColor = green;
}

style flex-content-child-grow {
    PreferredWidth = 1cnt;
    BackgroundColor = yellow;
    [hover] {
//        PreferredWidth = 90px;
    }
}

style flex-item-grow {
    BackgroundColor = red;
    PreferredSize = 90px;
    [hover] {
        PreferredWidth = 300px;//0.5pca;
        BackgroundColor = blue;
    }
}


style vertical-content-sized-container {
    FlexLayoutDirection = Horizontal;
    PreferredSize = 1cnt;
    BackgroundColor = white;
}
style group5 {
    PreferredSize = 1cnt;
    Margin = 3px;
}

style no-clip {
    ClipBehavior = Never;
}

style demo-container {
    FlexLayoutDirection = Horizontal;
    FlexLayoutWrap = WrapHorizontal;
    PreferredSize = 1pca 300px;
}

style <Heading1> {
    Margin = 5px 0 10px;
}

style container {
    Margin = 0 10px 0 10px;
    LayoutFitVertical = Fill;
}

style content-size-box-horizontal-wrap {
    PreferredSize = 800px 1cnt;
    FlexLayoutDirection = Horizontal;
    BackgroundColor = grey;
    FlexLayoutWrap = WrapHorizontal;
}

style content-size-box-vertical-wrap {
    PreferredSize = 1cnt 800px;
    BackgroundColor = grey;
    FlexLayoutWrap = WrapHorizontal;
    Overflow = Hidden;
}

style group-big {
    PreferredSize = 791px 100px;
    Margin = 5px;
}

style groupA {
    PreferredSize = 1cnt;
    Border = 1px;
    BorderColor = black;
}

style group3 {
    PreferredSize = 10%;
}

style color1 { BackgroundColor = rgb(20, 100, 20); }  
style color2 { BackgroundColor = rgb(20, 200, 120); }  
style color3 { BackgroundColor = rgb(190, 200, 20); }  
style color4 { BackgroundColor = rgb(20, 140, 120); }  

style stack-vertical {
    FlexLayoutDirection = Vertical;
    BackgroundColor = white;
    PreferredSize = 150px 500px;
    Padding = 20px;
    MarginBottom = 10px;
//   Border = 0 10px 0 0;
//   BorderColor = rgb(200, 90, 0);
}

style stack-horizontal {
    FlexLayoutDirection = Horizontal;
    BackgroundColor = white;
    PreferredSize = 500px 150px;
}

style g1 {
    FlexItemGrow = 1;
}

style fit {
    FlexLayoutDirection = Horizontal;
    BackgroundColor = white;
    PreferredSize = 500px;
}

style fit-vertical {
    BackgroundColor = white;
    PreferredSize = 200px;
    Padding = 10px;
}

style item-fill {
    LayoutFitHorizontal = Fill;
}

style item-shrink {
    PreferredHeight = 1000px;
    FlexItemShrink = 1;
}

style item-grow {
    PreferredWidth = 100px;
    LayoutFitHorizontal = Grow;
}

style item-dont-grow {
    PreferredWidth = 120px;
//    LayoutFitHorizontal = Grow;
}

style h-item-fill {
    LayoutFitVertical = Fill;
}

style h-item-shrink {
    PreferredHeight = 100px;
    LayoutFitVertical = Shrink;
}

style h-item-grow {
    PreferredHeight = 100px;
    LayoutFitVertical = Grow;
}

style h-item-dont-grow {
    PreferredHeight = 120px;
    LayoutFitVertical = Grow;
}

style group1 {
    PreferredSize = 80px;
    BackgroundColor = rgba(0, 120, 0, 200);
    Margin = 10px;
//    Border = 5x;
//    BorderColor = black;
}

style group2 {
    PreferredSize = 100px;
    BackgroundColor = rgb(77, 101, 20);
    Margin = 5px;
    
}

style fill-and-grow {
//    LayoutFitHorizontal = Grow;
    FlexItemGrow = 1;
}

style x-align {
    AlignmentTargetX = LayoutBox;
//    AlignX = Center;
    run animation(left-to-right);
//    Align = Start | Center | End; // AlignmentOffset = -50% of the element width and AlignmentOrigin = 50% of the
//    Align = 25%;  
} 

style y-align {
    AlignmentTargetY = LayoutBox;
    AlignmentDirectionY = Start;
    run animation(top-to-bottom);
}

animation left-to-right {

    [options] {
        duration = 2000;
        timingFunction = SineEaseIn;
    }

    [keyframes] {
        0% { AlignX = 50%; }
        50% { AlignX = 0%; }
        100% { AlignX = 100%; }
    }
}

animation top-to-bottom {

    [options] {
        duration = 2000;
        timingFunction = CubicEaseInOut;
    }

    [keyframes] {
        0% { 
            AlignmentOriginY = 0;
            AlignmentOffsetY = 0;
        }
        100% { 
            AlignmentOriginY = 100%;
            AlignmentOffsetY = -100%;
        }
    }
}
